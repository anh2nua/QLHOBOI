package InterfaceUSER;

import Connect.ketNoi;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author quang
 */
public class QuanLyDoanhThu extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyTaiKhoan
     */
    private Date date = new java.util.Date();
    ketNoi k = new ketNoi();
    DefaultTableModel model = new DefaultTableModel();
    private String date1 = "1/1/2018";
    private String date2 = "1/1/2018";

    public QuanLyDoanhThu() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Quản lý tài khoản");
        k.connect();
        loadDate();
        loadDatatoTable_Tong();
        lblCount.setText(String.valueOf(tblDT.getRowCount()));
        lblSum.setText(String.valueOf(getSum()) + " VNĐ");
        btnTong.setBackground(Color.orange);
        lblTenBang.setText("Bảng Tổng doanh thu");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDT = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblCount = new javax.swing.JLabel();
        lblSum = new javax.swing.JLabel();
        DCDate1 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        DCDate2 = new com.toedter.calendar.JDateChooser();
        btnGB = new javax.swing.JButton();
        btnDv = new javax.swing.JButton();
        btnVS = new javax.swing.JButton();
        btnKM = new javax.swing.JButton();
        btnTong = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblTenBang = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnBack.setBackground(new java.awt.Color(204, 255, 255));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnBack.setForeground(new java.awt.Color(51, 51, 51));
        btnBack.setIcon(new javax.swing.ImageIcon("D:\\Code\\DUAN1\\QLHOBOI\\img\\BackMini.png")); // NOI18N
        btnBack.setText("Hệ thống");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 204, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("Quản lý các gói bơi");

        tblDT.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        tblDT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hoá đơn", "Mã loại hoá đơn", "Mã mục - CCCD", "Nhân viên", "Thành tiền", "Thời gian"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDT.setGridColor(new java.awt.Color(153, 153, 153));
        jScrollPane1.setViewportView(tblDT);

        jLabel2.setText("Từ ngày :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Số mã doanh thu :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Tổng :");

        lblCount.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCount.setForeground(new java.awt.Color(0, 0, 255));
        lblCount.setText("99");

        lblSum.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSum.setForeground(new java.awt.Color(255, 51, 51));
        lblSum.setText("100000000 VNĐ");

        jLabel4.setText("Đến ngày :");

        btnGB.setBackground(new java.awt.Color(204, 204, 255));
        btnGB.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnGB.setForeground(new java.awt.Color(51, 51, 51));
        btnGB.setText("Gói bơi");
        btnGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGBActionPerformed(evt);
            }
        });

        btnDv.setBackground(new java.awt.Color(204, 204, 255));
        btnDv.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnDv.setForeground(new java.awt.Color(51, 51, 51));
        btnDv.setText("Dịch vụ");
        btnDv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDvActionPerformed(evt);
            }
        });

        btnVS.setBackground(new java.awt.Color(204, 204, 255));
        btnVS.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnVS.setForeground(new java.awt.Color(51, 51, 51));
        btnVS.setText("Vệ sinh");
        btnVS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVSActionPerformed(evt);
            }
        });

        btnKM.setBackground(new java.awt.Color(204, 204, 255));
        btnKM.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnKM.setForeground(new java.awt.Color(51, 51, 51));
        btnKM.setText("Khách mới");
        btnKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKMActionPerformed(evt);
            }
        });

        btnTong.setBackground(new java.awt.Color(204, 204, 255));
        btnTong.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnTong.setForeground(new java.awt.Color(51, 51, 51));
        btnTong.setText("Tổng");
        btnTong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTongActionPerformed(evt);
            }
        });

        lblTenBang.setBackground(new java.awt.Color(51, 51, 51));
        lblTenBang.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTenBang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTenBang.setText("DoanhThuTong");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblTenBang, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTenBang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(194, 194, 194)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnGB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDv)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnVS)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnKM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTong))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(DCDate2, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                    .addComponent(DCDate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(271, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCount, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(lblSum)
                .addGap(11, 11, 11))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDv, btnGB, btnKM, btnTong, btnVS});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(DCDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(DCDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGB)
                    .addComponent(btnDv)
                    .addComponent(btnVS)
                    .addComponent(btnKM)
                    .addComponent(btnTong))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(lblSum))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCount)
                        .addComponent(jLabel6)))
                .addGap(127, 127, 127))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGBActionPerformed
        // TODO add your handling code here:
        loadDatatoTable_GB();
        btnGB.setBackground(Color.orange);
        btnVS.setBackground(new Color(204, 204, 255));
        btnKM.setBackground(new Color(204, 204, 255));
        btnTong.setBackground(new Color(204, 204, 255));
        btnDv.setBackground(new Color(204, 204, 255));
        lblTenBang.setText("Bảng gói bơi");
    }//GEN-LAST:event_btnGBActionPerformed

    private void btnDvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDvActionPerformed
        // TODO add your handling code here:
        HOADONDV_Ban();
        HOADONDV_Thue();
        lblCount.setText(String.valueOf(tblDT.getRowCount()));
        lblSum.setText(String.valueOf(getSum()) + " VNĐ");
        btnDv.setBackground(Color.orange);
        btnVS.setBackground(new Color(204, 204, 255));
        btnKM.setBackground(new Color(204, 204, 255));
        btnTong.setBackground(new Color(204, 204, 255));
        btnGB.setBackground(new Color(204, 204, 255));
        lblTenBang.setText("Bảng dịch vụ");
    }//GEN-LAST:event_btnDvActionPerformed

    private void btnVSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVSActionPerformed
        // TODO add your handling code here:
        loadDatatoTable_VS();
        btnVS.setBackground(Color.orange);
        btnGB.setBackground(new Color(204, 204, 255));
        btnKM.setBackground(new Color(204, 204, 255));
        btnTong.setBackground(new Color(204, 204, 255));
        btnDv.setBackground(new Color(204, 204, 255));
        lblTenBang.setText("Bảng Vệ sinh");
    }//GEN-LAST:event_btnVSActionPerformed

    private void btnKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKMActionPerformed
        // TODO add your handling code here:
        loadDatatoTable_KM();
        btnKM.setBackground(Color.orange);
        btnVS.setBackground(new Color(204, 204, 255));
        btnGB.setBackground(new Color(204, 204, 255));
        btnTong.setBackground(new Color(204, 204, 255));
        btnDv.setBackground(new Color(204, 204, 255));
        lblTenBang.setText("Bảng khách mới");
    }//GEN-LAST:event_btnKMActionPerformed

    private void btnTongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTongActionPerformed
        // TODO add your handling code here:
        loadDatatoTable_Tong();
        btnTong.setBackground(Color.orange);
        btnVS.setBackground(new Color(204, 204, 255));
        btnKM.setBackground(new Color(204, 204, 255));
        btnGB.setBackground(new Color(204, 204, 255));
        btnDv.setBackground(new Color(204, 204, 255));
        lblTenBang.setText("Bảng Tổng doanh thu");
    }//GEN-LAST:event_btnTongActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        try {
            HomeQL ql = new HomeQL();
            ql.setVisible(true);
            this.setVisible(false);
        } catch (Exception e) {
            System.out.println("Lỗi ql");
        }
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Window".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyDoanhThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyDoanhThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyDoanhThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyDoanhThu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyDoanhThu().setVisible(true);
            }
        });
    }

    private void loadDate() {
        try {
//            DCDate1.setDateFormatString("dd/MM/yyyy");
//            DCDate2.setDateFormatString("dd/MM/yyyy");
            DCDate1.setDate(new SimpleDateFormat("dd/MM/yyyy").parse(date1));
            DCDate2.setDate(new java.util.Date());
        } catch (ParseException ex) {
            System.out.println(ex);
        }
    }

    private void loadDatatoTable_Tong() {
        try {
            model = (DefaultTableModel) tblDT.getModel();
            model.setRowCount(0);
            String sql = "SELECT * FROM HoaDOnVS WHERE ThoiGian BETWEEN '" + new java.sql.Date(DCDate1.getDate().getTime()) + "' AND '" + new java.sql.Date(DCDate2.getDate().getTime()) + "'";
            Statement st = k.cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Vector row = new Vector();
                row.add(rs.getString(1));
                row.add(rs.getString(2));
                row.add(rs.getString(3));
                row.add(rs.getString(4));
                row.add(rs.getString(5));
                row.add(rs.getString(6));
                model.addRow(row);
            }

            String sql2 = "Select *from HOADONKHACHMOI WHERE ThoiGian BETWEEN '" + new java.sql.Date(DCDate1.getDate().getTime()) + "' AND '" + new java.sql.Date(DCDate2.getDate().getTime()) + "'";
            Statement st2 = k.cn.createStatement();
            ResultSet rs2 = st2.executeQuery(sql2);
            while (rs2.next()) {
                Vector row2 = new Vector();
                row2.add(rs2.getString(1));
                row2.add(rs2.getString(2));
                row2.add("");
                row2.add(rs2.getString(3));
                row2.add(rs2.getString(4));
                row2.add(rs2.getString(5));
                model.addRow(row2);
            }

            String sql3 = "Select MAHOADONGB,MaLoaiDoanhThu,MAGOIBOI,USERNAME,THANHTIEN,THOIGIAN from HOADONGB "
                    + "WHERE ThoiGian BETWEEN '" + new java.sql.Date(DCDate1.getDate().getTime()) + "' AND '" + new java.sql.Date(DCDate2.getDate().getTime()) + "'";
            Statement st3 = k.cn.createStatement();
            ResultSet rs3 = st3.executeQuery(sql3);
            while (rs3.next()) {
                Vector row3 = new Vector();
                row3.add(rs3.getString(1));
                row3.add(rs3.getString(2));
                row3.add(rs3.getString(3));
                row3.add(rs3.getString(4));
                row3.add(rs3.getString(5));
                row3.add(rs3.getString(6));
                model.addRow(row3);
            }

            String sql5 = "Select MAHOADONDV,MaLoaiDoanhThu,CCCD,Username, THANHTIEN, THOIGIAN "
                    + "from HOADONDV_Thue WHERE ThoiGian BETWEEN '" + new java.sql.Date(DCDate1.getDate().getTime()) + "' AND '" + new java.sql.Date(DCDate2.getDate().getTime()) + "'";
            Statement st5 = k.cn.createStatement();
            ResultSet rs5 = st5.executeQuery(sql5);
            while (rs5.next()) {
                Vector row5 = new Vector();
                row5.add(rs5.getString(1));
                row5.add(rs5.getString(2));
                row5.add(rs5.getString(3));
                row5.add(rs5.getString(4));
                row5.add(rs5.getString(5));
                row5.add(rs5.getString(6));
                model.addRow(row5);
            }

            String sql6 = "Select MAHOADONDV, MaLoaiDoanhThu, username, THANHTIEN, THOIGIAN from HOADONDV_Mua "
                    + " WHERE ThoiGian BETWEEN '" + new java.sql.Date(DCDate1.getDate().getTime()) + "' AND '" + new java.sql.Date(DCDate2.getDate().getTime()) + "'";
            Statement st6 = k.cn.createStatement();
            ResultSet rs6 = st6.executeQuery(sql6);
            while (rs6.next()) {
                Vector row6 = new Vector();
                row6.add(rs6.getString(1));
                row6.add(rs6.getString(2));
                row6.add("");
                row6.add(rs6.getString(3));
                row6.add(rs6.getString(4));
                row6.add(rs6.getString(5));
                model.addRow(row6);
            }
            lblCount.setText(String.valueOf(tblDT.getRowCount()));
            lblSum.setText(String.valueOf(getSum()) + " VNĐ");
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    private void loadDatatoTable_VS() {
        try {
            model = (DefaultTableModel) tblDT.getModel();
            model.setRowCount(0);
            String sql = "Select *from HOADONVS WHERE ThoiGian BETWEEN '" + new java.sql.Date(DCDate1.getDate().getTime()) + "' AND '" + new java.sql.Date(DCDate2.getDate().getTime()) + "'";
            Statement st = k.cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Vector row = new Vector();
                row.add(rs.getString(1));
                row.add(rs.getString(2));
                row.add(rs.getString(3));
                row.add(rs.getString(4));
                row.add(rs.getString(5));
                row.add(rs.getString(6));
                model.addRow(row);
            }
            lblCount.setText(String.valueOf(tblDT.getRowCount()));
            lblSum.setText(String.valueOf(getSum()) + " VNĐ");
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    private void loadDatatoTable_KM() {
        try {
            model = (DefaultTableModel) tblDT.getModel();
            model.setRowCount(0);
            String sql2 = "Select *from HOADONKHACHMOI WHERE ThoiGian BETWEEN '" + new java.sql.Date(DCDate1.getDate().getTime()) + "' AND '" + new java.sql.Date(DCDate2.getDate().getTime()) + "'";
            Statement st2 = k.cn.createStatement();
            ResultSet rs2 = st2.executeQuery(sql2);
            while (rs2.next()) {
                Vector row2 = new Vector();
                row2.add(rs2.getString(1));
                row2.add(rs2.getString(2));
                row2.add("");
                row2.add(rs2.getString(3));
                row2.add(rs2.getString(4));
                row2.add(rs2.getString(5));
                model.addRow(row2);
            }
            lblCount.setText(String.valueOf(tblDT.getRowCount()));
            lblSum.setText(String.valueOf(getSum()) + " VNĐ");
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    private void loadDatatoTable_GB() {
        try {
            model = (DefaultTableModel) tblDT.getModel();
            model.setRowCount(0);
            String sql = "Select MAHOADONGB,MaLoaiDoanhThu,MAGOIBOI,USERNAME,THANHTIEN,THOIGIAN from HOADONGB"
                    + " WHERE ThoiGian BETWEEN '" + new java.sql.Date(DCDate1.getDate().getTime()) + "' AND '" + new java.sql.Date(DCDate2.getDate().getTime()) + "'";
            Statement st = k.cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Vector row = new Vector();
                row.add(rs.getString(1));
                row.add(rs.getString(2));
                row.add(rs.getString(3));
                row.add(rs.getString(4));
                row.add(rs.getString(5));
                row.add(rs.getString(6));
                model.addRow(row);
            }
            lblCount.setText(String.valueOf(tblDT.getRowCount()));
            lblSum.setText(String.valueOf(getSum()) + " VNĐ");
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    private void HOADONDV_Thue() {
        try {
//            model = (DefaultTableModel) tblDT.getModel();
//            model.setRowCount(0);
            String sql5 = "Select MAHOADONDV,MaLoaiDoanhThu,CCCD,Username, THANHTIEN, THOIGIAN from HOADONDV_Thue  WHERE ThoiGian BETWEEN '" + new java.sql.Date(DCDate1.getDate().getTime()) + "' AND '" + new java.sql.Date(DCDate2.getDate().getTime()) + "'";
            Statement st5 = k.cn.createStatement();
            ResultSet rs5 = st5.executeQuery(sql5);
            while (rs5.next()) {
                Vector row5 = new Vector();
                row5.add(rs5.getString(1));
                row5.add(rs5.getString(2));
                row5.add(rs5.getString(3));
                row5.add(rs5.getString(4));
                row5.add(rs5.getString(5));
                row5.add(rs5.getString(6));
                model.addRow(row5);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    private void HOADONDV_Ban() {
        try {
            model = (DefaultTableModel) tblDT.getModel();
            model.setRowCount(0);
            String sql6 = "Select MAHOADONDV, MaLoaiDoanhThu, username, THANHTIEN, THOIGIAN from HOADONDV_Mua "
                    + " WHERE ThoiGian BETWEEN '" + new java.sql.Date(DCDate1.getDate().getTime()) + "' AND '" + new java.sql.Date(DCDate2.getDate().getTime()) + "'";
            Statement st6 = k.cn.createStatement();
            ResultSet rs6 = st6.executeQuery(sql6);
            while (rs6.next()) {
                Vector row6 = new Vector();
                row6.add(rs6.getString(1));
                row6.add(rs6.getString(2));
                row6.add("");
                row6.add(rs6.getString(3));
                row6.add(rs6.getString(4));
                row6.add(rs6.getString(5));
                model.addRow(row6);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    private int getSum() {
        int rc = tblDT.getRowCount();
        int sum = 0;
        for (int i = 0; i < rc; i++) {
            sum = sum + Integer.parseInt(tblDT.getValueAt(i, 4).toString());
        }
        return sum;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DCDate1;
    private com.toedter.calendar.JDateChooser DCDate2;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDv;
    private javax.swing.JButton btnGB;
    private javax.swing.JButton btnKM;
    private javax.swing.JButton btnTong;
    private javax.swing.JButton btnVS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel lblCount;
    private javax.swing.JLabel lblSum;
    private javax.swing.JLabel lblTenBang;
    private javax.swing.JTable tblDT;
    // End of variables declaration//GEN-END:variables

}
