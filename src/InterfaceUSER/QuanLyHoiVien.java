package InterfaceUSER;

import Connect.ketNoi;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author quang
 */
public class QuanLyHoiVien extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyTaiKhoan
     */
    private Date date = new java.util.Date();
    private int index;
    ketNoi k = new ketNoi();
    DefaultTableModel model = new DefaultTableModel();
    private String image = null;

    public QuanLyHoiVien() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Quản lý tài khoản");
        k.connect();
        LoadUser();
        loadDate();
        loadDataToTable();
        showDetail(0);
        LoadDataToComboBox();
        dongHo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHV = new javax.swing.JTable();
        txtTimkiem = new javax.swing.JTextField();
        BtnMuaGoi = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        txtSDT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTenHV = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDiaChi = new javax.swing.JTextArea();
        btnNew = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtSoLuot = new javax.swing.JTextField();
        cboGoiGoi = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lblGia = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblSoLuotBan = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btnCheckIn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtMaHV = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        lblDongHo = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        lblUser1 = new javax.swing.JLabel();
        btnCapNhatAnh = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        dcsNgaySinh = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        lblTrangThai = new javax.swing.JLabel();
        lblGia1 = new javax.swing.JLabel();
        lblTenGB = new javax.swing.JLabel();
        lblSoLuotBan1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnBack.setBackground(new java.awt.Color(204, 255, 255));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnBack.setForeground(new java.awt.Color(51, 51, 51));
        btnBack.setIcon(new javax.swing.ImageIcon("D:\\Code\\DUAN1\\QLHOBOI\\img\\BackMini.png")); // NOI18N
        btnBack.setText("Hệ thống");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 204, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("Quản lý hội viên");

        tblHV.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        tblHV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hội viên", "Tên hội viên", "Giói tính", "Ngày sinh", "SĐT", "Địa chỉ", "Đối tượng", "Số lượt", "Trạng thái", "IMG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHV.setGridColor(new java.awt.Color(153, 153, 153));
        tblHV.getTableHeader().setReorderingAllowed(false);
        tblHV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHV);
        if (tblHV.getColumnModel().getColumnCount() > 0) {
            tblHV.getColumnModel().getColumn(9).setResizable(false);
        }

        txtTimkiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimkiemActionPerformed(evt);
            }
        });

        BtnMuaGoi.setBackground(new java.awt.Color(255, 255, 255));
        BtnMuaGoi.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        BtnMuaGoi.setIcon(new javax.swing.ImageIcon("D:\\Code\\DUAN1\\QLHOBOI\\img\\Goimoinini.jpg")); // NOI18N
        BtnMuaGoi.setText("Mua gói");
        BtnMuaGoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMuaGoiActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 102, 102));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon("D:\\Code\\DUAN1\\QLHOBOI\\img\\Delete.png")); // NOI18N
        btnDelete.setText("Xoá");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(204, 255, 204));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon("D:\\Code\\DUAN1\\QLHOBOI\\img\\ChangePass.png")); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(204, 204, 255));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon("D:\\Code\\DUAN1\\QLHOBOI\\img\\Add.png")); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        txtSDT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Điện thoại :");

        txtTenHV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Tên hội viên :");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Giới tính", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        rdoNam.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rdoNam.setText("Nam");

        rdoNu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rdoNu.setText("Nữ");
        rdoNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(rdoNam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(rdoNu)
                .addGap(70, 70, 70))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoNam)
                    .addComponent(rdoNu))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Địa chỉ :");

        txtDiaChi.setColumns(20);
        txtDiaChi.setRows(5);
        jScrollPane3.setViewportView(txtDiaChi);

        btnNew.setBackground(new java.awt.Color(255, 255, 255));
        btnNew.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnNew.setIcon(new javax.swing.ImageIcon("D:\\Code\\DUAN1\\QLHOBOI\\img\\Refresh-icon.png")); // NOI18N
        btnNew.setText("Tạo mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Số lượt :");

        txtSoLuot.setEditable(false);
        txtSoLuot.setBackground(new java.awt.Color(0, 204, 204));
        txtSoLuot.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSoLuot.setForeground(new java.awt.Color(255, 255, 255));
        txtSoLuot.setText("100");

        cboGoiGoi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cboGoiGoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboGoiGoiActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Phải trả :");

        lblGia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblGia.setForeground(new java.awt.Color(255, 0, 0));
        lblGia.setText("2000000");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Số lượt :");

        lblSoLuotBan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSoLuotBan.setForeground(new java.awt.Color(0, 0, 255));
        lblSoLuotBan.setText("365");

        btnTimKiem.setBackground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Ngày sinh :");

        btnCheckIn.setBackground(new java.awt.Color(255, 255, 255));
        btnCheckIn.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnCheckIn.setIcon(new javax.swing.ImageIcon("D:\\Code\\DUAN1\\QLHOBOI\\img\\Login.png")); // NOI18N
        btnCheckIn.setText("Vào trong");
        btnCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckInActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Số lượng :");

        txtSoLuong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoLuongActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Mã hội viên :");

        txtMaHV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel10.setBackground(new java.awt.Color(204, 204, 204));

        lblDongHo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDongHo.setForeground(new java.awt.Color(255, 0, 0));
        lblDongHo.setText("12 : 00 ");

        lblDate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 0, 0));
        lblDate.setText("12/12/2020");

        lblUser.setBackground(new java.awt.Color(0, 204, 255));
        lblUser.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblUser.setForeground(new java.awt.Color(255, 51, 204));
        lblUser.setText("Tên Gói Bơi");

        lblUser1.setBackground(new java.awt.Color(0, 204, 255));
        lblUser1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblUser1.setForeground(new java.awt.Color(0, 0, 255));
        lblUser1.setText("Nhân viên :");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblUser1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUser))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(lblDongHo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDate)))
                .addGap(27, 27, 27))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDongHo)
                    .addComponent(lblDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUser)
                    .addComponent(lblUser1))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        btnCapNhatAnh.setBackground(new java.awt.Color(255, 102, 102));
        btnCapNhatAnh.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnCapNhatAnh.setText("Cập nhật ảnh");
        btnCapNhatAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatAnhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Trạng thái :");

        lblTrangThai.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTrangThai.setForeground(new java.awt.Color(0, 0, 255));
        lblTrangThai.setText("Đang hoạt động");

        lblGia1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblGia1.setForeground(new java.awt.Color(255, 0, 0));
        lblGia1.setText("VNĐ");

        lblTenGB.setBackground(new java.awt.Color(0, 204, 255));
        lblTenGB.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTenGB.setForeground(new java.awt.Color(0, 0, 255));
        lblTenGB.setText("Tên Gói Bơi");

        lblSoLuotBan1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSoLuotBan1.setForeground(new java.awt.Color(0, 0, 255));
        lblSoLuotBan1.setText("lượt");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnNew)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnDelete)
                                        .addGap(29, 29, 29)
                                        .addComponent(btnCheckIn))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnAdd)
                                        .addGap(32, 32, 32)
                                        .addComponent(btnUpdate)
                                        .addGap(295, 295, 295))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(233, 233, 233)
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtSoLuong))
                                            .addComponent(cboGoiGoi, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(42, 42, 42)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblSoLuotBan, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(lblSoLuotBan1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(85, 85, 85)
                                                .addComponent(jLabel3))
                                            .addComponent(lblTenGB))
                                        .addGap(19, 19, 19))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnCapNhatAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(lblTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblGia)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblGia1)
                                        .addGap(31, 31, 31)
                                        .addComponent(BtnMuaGoi))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtTenHV, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtSoLuot, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtMaHV, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane3))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dcsNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 28, Short.MAX_VALUE))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {BtnMuaGoi, btnAdd, btnDelete, btnUpdate});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBack)
                        .addComponent(jLabel1))
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaHV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenHV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoLuot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11))
                    .addComponent(dcsNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete)
                    .addComponent(btnNew)
                    .addComponent(btnUpdate)
                    .addComponent(btnCheckIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(lblTrangThai))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCapNhatAnh))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboGoiGoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(lblSoLuotBan)
                            .addComponent(lblSoLuotBan1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12))
                            .addComponent(lblTenGB)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BtnMuaGoi)
                        .addComponent(jLabel3)
                        .addComponent(lblGia)
                        .addComponent(lblGia1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {BtnMuaGoi, btnAdd, btnDelete, btnUpdate});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdoNuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoNuActionPerformed

    private void BtnMuaGoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMuaGoiActionPerformed
        // TODO add your handling code here:
        try {

            try {
                Integer.parseInt(txtSoLuong.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Số lượng phải là số");
                return;
            }
            String sql = "Update hoivien set soluot = ? where mahv = ?";
            PreparedStatement st = k.cn.prepareStatement(sql);
            index = tblHV.getSelectedRow();
            int sL = Integer.parseInt(tblHV.getValueAt(index, 7).toString());
            int soL = Integer.parseInt(lblSoLuotBan.getText()) * Integer.parseInt(txtSoLuong.getText()) + sL;
            String s = String.valueOf(soL);
            st.setString(1, s);
            st.setString(2, txtMaHV.getText());
            if (tblHV.getValueAt(index, 0).toString().equalsIgnoreCase(txtMaHV.getText())) {
                st.executeUpdate();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Mã hội viên phải giống trong bảng");
            }

            loadDataToTable();

            // Lấy ngày tháng năm (Datee = Ngày tháng năm)
            int ngay, thang, nam;
            String day = lblDate.getText();
            ngay = Integer.parseInt(day.substring(0, 2));
            thang = Integer.parseInt(day.substring(3, 5));
            nam = Integer.parseInt(day.substring(6, 10));
            String datee = thang + "-" + ngay + "-" + nam;

            //Thành tiền = giá * số lượng vé
            int thanhTien = Integer.parseInt(lblGia.getText()) * Integer.parseInt(txtSoLuong.getText());

            //Thêm vào hoá đơn khách mới
            String sql2 = "insert into HOADONGB(MaLoaiDoanhThu, MAGOIBOI,THANHTIEN,SOLUONG, THOIGIAN,username) values(?,?,?,?,?,?)";
            PreparedStatement st2 = k.cn.prepareStatement(sql2);
            st2.setString(1, "DoanhThuGoiBoi");
            st2.setString(2, cboGoiGoi.getSelectedItem().toString());
            st2.setInt(3, thanhTien);
            st2.setString(4, txtSoLuong.getText());
            st2.setString(5, datee);
            st2.setString(6, lblUser.getText());
            st2.executeUpdate();
            JOptionPane.showMessageDialog(null, "Bạn đã mua thành công : " + txtSoLuong.getText() + " Gói bơi \n"
                    + "Với giá : " + String.valueOf(thanhTien) + " VNĐ");
            txtSoLuong.setText("");
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_BtnMuaGoiActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try {
            if (!checkNull()) {
                return;
            }
            if (!checkDup()) {
                return;
            }
            try {
                Integer.parseInt(txtSDT.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Số điện thoại là số");
                return;
            }
            String sql = "insert into  HOIVIEN (MAHV, TENHV,GIOITINH,NGAYSINH,SDT,DIACHI,soluot,img,trangThai) VALUES(?,?,?,?,?,?,?,?,?)";
            PreparedStatement st = k.cn.prepareStatement(sql);
            st.setString(1, txtMaHV.getText());
            st.setString(2, txtTenHV.getText());
            String gen;
            if (rdoNam.isSelected()) {
                gen = "Nam";
            } else {
                gen = "Nữ";
            }
            st.setString(3, gen);
            st.setDate(4, new java.sql.Date(this.dcsNgaySinh.getDate().getTime()));
            st.setString(5, txtSDT.getText());
            st.setString(6, txtDiaChi.getText());
            st.setString(7, "0");
            st.setString(8, "quanglb.jpg");
            st.setString(9, "");
            st.executeUpdate();
            loadDataToTable();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckInActionPerformed
        // TODO add your handling code here:
        try {
            index = tblHV.getSelectedRow();
            if (Integer.parseInt(tblHV.getValueAt(index, 7).toString()) == 0) {
                JOptionPane.showMessageDialog(rootPane, "Bạn đã hết lượt bơi");
                return;
            }
//            Check quá tải
            QuanLyLuotKhach lk = new QuanLyLuotKhach();
            if (Integer.parseInt(lk.lblTong.getText()) >= 300) {
                JOptionPane.showMessageDialog(rootPane, "Hiện tại bể bơi đang quá tải");
                return;
            }
//
//            //điều kiện để được chkin
            if (lblTrangThai.getText().equalsIgnoreCase("Đang hoạt động")) {
                JOptionPane.showMessageDialog(rootPane, "Hội viên này đang hoạt động");
                return;
            } else {
                // chuyển trạng thái thành đang hoạt động
                String sql = "Update hoivien set trangthai = N'Đang hoạt động' where mahv = ?";
                PreparedStatement st = k.cn.prepareStatement(sql);
                st.setString(1, txtMaHV.getText());
                st.executeUpdate();

//             Thêm hội viên vừa được check in vào bảng hội viên đang hoạt động
                String sql2 = "insert into HOIVIENDHD values(?,?)";
                PreparedStatement st2 = k.cn.prepareStatement(sql2);
                st2.setString(1, tblHV.getValueAt(index, 0).toString());
                st2.setString(2, tblHV.getValueAt(index, 1).toString());
                st2.executeUpdate();

//             trừ số lượt đi 1
                String sql3 = "Update hoivien set soluot = soluot - 1 where mahv = ?";
                PreparedStatement st3 = k.cn.prepareStatement(sql3);
                st3.setString(1, tblHV.getValueAt(index, 0).toString());
                st3.executeUpdate();
            }
            //Load lại Jtable
            loadDataToTable();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnCheckInActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        try {
            String tk = txtTimkiem.getText();
            for (int i = 0; i < tblHV.getRowCount(); i++) {
                if (tk.equalsIgnoreCase(tblHV.getValueAt(i, 0).toString())) {
                    showDetail(i);
                    return;
                }
            }
            JOptionPane.showMessageDialog(rootPane, "Không có hội viên này");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void txtTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimkiemActionPerformed

    private void btnCapNhatAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatAnhActionPerformed
        // TODO add your handling code here:
        try {
            index = tblHV.getSelectedRow();
            JFileChooser jfc = new JFileChooser();
            // thiết lập các file xuất hiện theo các loại file được lọc
            jfc.setAcceptAllFileFilterUsed(true);
            //thiết lập chuỗi các loại file ảnh có thể chọn
            String[] filefilter = {"jpg", "png", "jpeg"};
            String desciption = "Các loại file được hỗ trợ : " + Arrays.toString(filefilter).replace('[', '(').replace(']', ')');
            // đưa các loại đuôi file trong mảng filefilter sang chuỗi.
            jfc.setFileFilter(new FileNameExtensionFilter(desciption, filefilter));
            int chon = jfc.showOpenDialog(this);

            if (chon == JFileChooser.APPROVE_OPTION) {
                image = jfc.getSelectedFile().getName();
                tblHV.setValueAt((String) image, index, 9);
                try {
                    String sql = "update hoivien set img = ? where mahv = ?";
                    PreparedStatement st;
                    st = k.cn.prepareStatement(sql);
                    st.setString(1, image);
                    st.setString(2, tblHV.getValueAt(index, 0).toString());
                    st.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(QuanLyHoiVien.class.getName()).log(Level.SEVERE, null, ex);
                }
                loadDataToTable();
                showDetail(index);
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Oops! Có lỗi xảy ra");
            System.out.println(e);
        }

    }//GEN-LAST:event_btnCapNhatAnhActionPerformed

    private void tblHVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHVMouseClicked
        // TODO add your handling code here:
        try {
            index = tblHV.getSelectedRow();
            showDetail(index);
        } catch (Exception e) {
            System.out.println("Lỗi click \n" + e);
        }
    }//GEN-LAST:event_tblHVMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        try {
            clearForm();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnNewActionPerformed

    private void cboGoiGoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboGoiGoiActionPerformed
        // TODO add your handling code here:
        loadDataToLBL();
    }//GEN-LAST:event_cboGoiGoiActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        try {
            HomeNV ql = new HomeNV();
            ql.setVisible(true);
            this.setVisible(false);
        } catch (Exception e) {
            System.out.println("Lỗi ql");
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            QuanLyLuotKhach lk = new QuanLyLuotKhach();
            int size = lk.tblCheckIn.getRowCount();
            for (int i = 0; i < size; i++) {
                if (lk.tblCheckIn.getValueAt(size, 0).toString().equalsIgnoreCase(txtMaHV.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "Phải check out hội viên này trước khi xoá");
                    return;
                }
            }
            int hoi = JOptionPane.showConfirmDialog(this, "Bạn có muốn xoá không ?", "Cảnh báo xoá", JOptionPane.YES_NO_OPTION);
            if (hoi != JOptionPane.YES_OPTION) {
                return;
            } else {
            }

            String sql = "delete from hoivien where mahv = ?";
            PreparedStatement st = k.cn.prepareStatement(sql);
            st.setString(1, txtMaHV.getText());
            st.executeUpdate();
            loadDataToTable();
            clearForm();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            if (!checkNull()) {
                return;
            }
            try {
                Integer.parseInt(txtSDT.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Số điện thoại là số");
                return;
            }
            String sql = "Update hoivien set tenhv = ?, GIOITINH = ?, NGAYSINH= ?, sdt = ?, DIACHI = ? where mahv = ?";
            PreparedStatement st = k.cn.prepareStatement(sql);
            st.setString(6, txtMaHV.getText());
            st.setString(1, txtTenHV.getText());
            String gen;
            if (rdoNam.isSelected()) {
                gen = "Nam";
            } else {
                gen = "Nữ";
            }
            st.setString(2, gen);
            st.setDate(3, new java.sql.Date(this.dcsNgaySinh.getDate().getTime()));
            st.setString(4, txtSDT.getText());
            st.setString(5, txtDiaChi.getText());
            st.executeUpdate();
            loadDataToTable();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoLuongActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Window".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoiVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoiVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoiVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyHoiVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyHoiVien().setVisible(true);
            }
        });
    }

    public void addImage(String fileIcon, JLabel hinh) {
        //set ảnh theo đường link từ file trong cùng thư mục cha
        ImageIcon Icon = new ImageIcon(getClass().getResource("/images/" + fileIcon));
        Image IMG = Icon.getImage();    //lấy ảnh
//        Image NewIMG = IMG.getScaledInstance(hinh.getWidth(), Icon.getIconHeight() * hinh.getWidth() / Icon.getIconHeight(), 0);
        Image NewIMG = IMG.getScaledInstance(100, 100, 0);   // ép kích thước ảnh theo size đặt ra
        Icon = new ImageIcon(NewIMG); //seticon bằng ảnh đã ép kích thước
        hinh.setIcon(Icon);
    }

    private void loadDataToTable() {
        try {
            model = (DefaultTableModel) tblHV.getModel();
            model.setRowCount(0);
            Statement st = k.cn.createStatement();
            ResultSet rs = st.executeQuery("select mahv,tenhv,gioitinh, ngaysinh, sdt,diachi,\n"
                    + "IIF(YEAR(GETDATE()) - YEAR(ngaysinh)>16,N'Người lớn',N'Trẻ em') as 'DoiTuong',soluot, trangthai,img from hoivien");
            while (rs.next()) {
                Vector row = new Vector();
                row.add(rs.getString(1));
                row.add(rs.getString(2));
                row.add(rs.getString(3));
                row.add(rs.getDate(4));
                row.add(rs.getString(5));
                row.add(rs.getString(6));
                row.add(rs.getString(7));
                row.add(rs.getInt(8));
                row.add(rs.getString(9));
                row.add(rs.getString(10));
                model.addRow(row);
            }
        } catch (SQLException e) {
            System.out.println("Lỗi tải dữ liệu");
        }
    }

    private void showDetail(int index) {
        loadDate();
        txtMaHV.setText(tblHV.getValueAt(index, 0).toString());
        txtTenHV.setText(tblHV.getValueAt(index, 1).toString());
        if (tblHV.getValueAt(index, 2).toString().equalsIgnoreCase("Nam")) {
            rdoNam.setSelected(true);
            rdoNu.setSelected(false);

        } else {
            rdoNu.setSelected(true);
            rdoNam.setSelected(false);
        }
        dcsNgaySinh.setDateFormatString("dd/MM/yyyy");
        String ss = (String) tblHV.getValueAt(index, 3).toString();
        int nam = Integer.parseInt(ss.substring(0, 4));
        int thang = Integer.parseInt(ss.substring(5, 7));
        int ngay = Integer.parseInt(ss.substring(8, 10));
        Date date1 = new Date(nam - 1900, thang - 1, ngay);
        dcsNgaySinh.setDate(date1);
        txtSDT.setText(tblHV.getValueAt(index, 4).toString());
        txtDiaChi.setText(tblHV.getValueAt(index, 5).toString());
        txtSoLuot.setText(tblHV.getValueAt(index, 7).toString());
        if (tblHV.getValueAt(index, 8).toString().equalsIgnoreCase("Đang hoạt động")) {

            lblTrangThai.setText("Đang hoạt động");
        } else {
            lblTrangThai.setText("Không hoạt động");
        }
        tblHV.setRowSelectionInterval(index, index);
        try {
            lblImage.setSize(110, 110);
            BufferedImage image = ImageIO.read(new File(tblHV.getValueAt(index, 9).toString()));
            ImageIcon icon = new ImageIcon(image.getScaledInstance(110, 110, image.SCALE_SMOOTH));
            lblImage.setIcon(icon);
        } catch (IOException ex) {
            System.out.println(ex);
        }

    }

    private void clearForm() {
        showDetail(0);
        txtMaHV.setText("");
        txtTenHV.setText("");
        txtDiaChi.setText("");
        txtSDT.setText("");
        txtSoLuong.setText("");
        txtSoLuot.setText("");
        dcsNgaySinh.setDate(date);
        rdoNam.isSelected();
        cboGoiGoi.setSelectedIndex(0);
        txtSoLuong.setText("");
    }

    private boolean checkNull() {
        if (txtMaHV.getText().isEmpty()) {
            txtMaHV.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Mã Hội viên trống");
            return false;
        } else if (txtTenHV.getText().isEmpty()) {
            txtTenHV.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Tên Hội viên trống");
            return false;
        } else if (txtDiaChi.getText().isEmpty()) {
            txtDiaChi.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Địa chỉ trống");
            return false;
        } else if (txtSDT.getText().isEmpty()) {
            txtSDT.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Số điện thoại trống");
            return false;
        } else {
            return true;
        }
    }

    private boolean checkDup() {
        if (tblHV.getValueAt(index, 0).toString().equalsIgnoreCase(txtMaHV.getText())) {
            txtMaHV.requestFocus();
            JOptionPane.showMessageDialog(rootPane, "Mã Hội viên đã tồn tại");
            return false;
        } else {
            return true;
        }
    }

    private void loadDate() {
        dcsNgaySinh.setDateFormatString("dd/MM/yyyy");
    }

    private void LoadDataToComboBox() {
        try {
            cboGoiGoi.removeAllItems();
            Statement st = k.cn.createStatement();
            String sql = "select magoiboi from goiboi";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                cboGoiGoi.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            System.out.println("Không thể tảu dữ liệu lên comboBox");
        }
    }

    private void loadDataToLBL() {
        try {
            String sql = "select tengoiboi,soluot, gia from goiboi where magoiboi = ?";
            PreparedStatement st = k.cn.prepareStatement(sql);
            st.setString(1, cboGoiGoi.getSelectedItem().toString());
            ResultSet rs = st.executeQuery();
            while (rs.next()) {
                lblTenGB.setText(rs.getString(1));
                lblSoLuotBan.setText(rs.getString(2));
                lblGia.setText(rs.getString(3));
            }
        } catch (SQLException e) {
            System.out.println("Lỗi tải dữ liệu");
            clearForm();
        }
    }

    private void dongHo() {
        Thread t = new Thread() {
            String text;
            SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss aa");

            @Override
            public void run() {
                while (true) {
                    Date d = new Date(); //Tạo đối tượng Date để lấy giờ hệ thống
                    text = sdf.format(d);
                    lblDongHo.setText(text);
                    try {
                        Thread.sleep(1000);
                    } catch (Exception e) {
                        break;
                    }
                }
            }
        };
        t.start();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        Date date = new Date();
        String dateFormat = formatter.format(date);
        lblDate.setText(dateFormat);
    }

    private void LoadUser() {
        try {
            String sql = "select * from tkol";
            Statement st = k.cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                lblUser.setText(rs.getString(1));
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnMuaGoi;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCapNhatAnh;
    private javax.swing.JButton btnCheckIn;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboGoiGoi;
    private com.toedter.calendar.JDateChooser dcsNgaySinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDongHo;
    private javax.swing.JLabel lblGia;
    private javax.swing.JLabel lblGia1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblSoLuotBan;
    private javax.swing.JLabel lblSoLuotBan1;
    private javax.swing.JLabel lblTenGB;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JLabel lblUser;
    private javax.swing.JLabel lblUser1;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblHV;
    private javax.swing.JTextArea txtDiaChi;
    private javax.swing.JTextField txtMaHV;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtSoLuot;
    private javax.swing.JTextField txtTenHV;
    private javax.swing.JTextField txtTimkiem;
    // End of variables declaration//GEN-END:variables
}
